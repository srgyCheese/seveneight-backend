// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id         String  @id @default(cuid())
  vk_id      String
  last_name  String
  first_name String
  photo_400  String?
  photo_100  String?

  posts         Post[]
  photos        Photo[]
  comments      UserComment[] @relation(name: "OtherUsersComments")
  addedComments UserComment[] @relation(name: "UserComments")

  photoComments PhotoComment[]
}

model UserComment {
  id                String @id @default(cuid())
  toUserId          String
  fromUserId        String
  commentTemplateId String

  toUser          User            @relation(fields: [toUserId], references: [id], onDelete: Cascade, name: "OtherUsersComments")
  fromUser        User            @relation(fields: [fromUserId], references: [id], onDelete: Cascade, name: "UserComments")
  commentTemplate CommentTemplate @relation(fields: [commentTemplateId], references: [id], onDelete: Cascade)

  @@index([toUserId])
  @@index([fromUserId])
  @@index([commentTemplateId])
}

model Photo {
  id     String @id @default(cuid())
  userId String
  url    String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  comments PhotoComment[]

  @@index([userId])
}

model PhotoComment {
  id                String @id @default(cuid())
  toPhotoId         String
  fromUserId        String
  commentTemplateId String

  photo           Photo           @relation(fields: [toPhotoId], references: [id], onDelete: Cascade)
  fromUser        User            @relation(fields: [fromUserId], references: [id], onDelete: Cascade)
  commentTemplate CommentTemplate @relation(fields: [commentTemplateId], references: [id], onDelete: Cascade)

  @@index([toPhotoId])
  @@index([fromUserId])
  @@index([commentTemplateId])
}

model Post {
  id      String @id @default(cuid())
  userId  String
  title   String
  content String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model CommentTemplate {
  id              String  @id @default(cuid())
  url             String
  isRounded       Boolean @default(true)
  avatarTransfrom String  @default("")
  textTransform   String  @default("translate(16%, 0);")

  comments      UserComment[]
  photoComments PhotoComment[]
}
